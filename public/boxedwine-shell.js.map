{"version":3,"sources":["boxedwine-shell.js"],"names":["ALLOW_PARAM_OVERRIDE_FROM_URL","SUPPRESS_WINEBOOT","ROOT","STORAGE_DROPBOX","STORAGE_LOCAL_STORAGE","STORAGE_MEMORY","ONDEMAND_DEFAULT","ONDEMAND_ROOT","DROPBOX_APP_KEY","RECEIVE_URL","DEFAULT_AUTO_RUN","DEFAULT_SOUND_ENABLED","DEFAULT_APP_DIRECTORY","DEFAULT_BPP","DEFAULT_ROOT_ZIP_FILE","Config","locateRootBaseUrl","locateAppBaseUrl","locateOverlayBaseUrl","urlParams","storageMode","isRunningInline","showUploadDownload","selectedItem","selectedFilename","isRunning","uniqueDirs","timer","index","files","client","alreadyBuiltFileSystem","ae","document","createElement","body","appendChild","style","url","statusElement","getElementById","progressElement","spinnerElement","flag_r","isReadable","isWriteable","isTruncating","isAppendable","isSynchronous","isExclusive","pathExistsAction","pathNotExistsAction","setConfiguration","appDirPrefix","isAutoRunSet","getAutoRun","rootZipFile","getRootZipFile","extraZipFiles","getZipFileList","appZipFile","getAppZipFile","appPayload","getPayload","extraPayload","Program","getExecutable","WorkingDir","getWorkingDirectory","isSoundEnabled","getSound","bpp","getBitsPerPixel","useRangeRequests","getUseRangeRequests","glext","getGLExtensions","cpu","getCPU","allowParameterOverride","length","getParameter","console","log","startsWith","endsWith","substring","split","join","auto","param","payload","ondemand","soundEnabled","dir","filename","zipFiles","ondemandMinOverlay","push","filenames","zipFilenames","i","auth_callback","error","alert","isAuthenticated","disabled","textContent","buildFileSystem","BrowserFS","FileSystem","InMemory","dropboxLogin","Dropbox","Client","key","authDriver","AuthDriver","Popup","receiverUrl","authenticate","initFileSystem","writableStorage","LocalStorage","isAvailable","interactive","syncGet","offset","req","XMLHttpRequest","open","data","err","overrideMimeType","range","setRequestHeader","onreadystatechange","e","readyState","status","text","responseText","Int8Array","charCodeAt","send","getFileSize","p","Promise","resolve","reject","Error","parseInt","getResponseHeader","onerror","then","result","getCentralOffset","buffer","pos","byteLength","top","Math","max","isDropBox","display","hidden","Buffer","BFSRequire","buildExtraFileSystems","extraFSs","buildAppFileSystems","homeAdapter","buildRemoteZipFile","zipfs","buildBrowserFileSystem","rootListingObject","XmlHttpRequest","Create","baseUrl","e2","xmlHttpFs","rootMfs","MountableFileSystem","mount","readFile","contents","ZipFS","zipData","e3","zipFilename","zipFileCallback","fileSizeAsString","fileSizeAsInt","Number","blockSize","lastPartOfFile","centralOffset","Uint8Array","name","getBase64Data","base64Data","bytes","atob","contentLength","adapterCallback","e4","additionalZipfs","FolderAdapter","listingObject","mfs","fsCallback","FS","createPath","root","OverlayFS","readable","writable","rootOverlay","deleteFile","initialize","homeOverlay","mirrorFS","AsyncMirror","postBuildFileSystem","rootFS","homeFS","BFS","EmscriptenFS","recursiveCopy","startEmulator","toggleConsole","start","startBtn","soundToggle","checked","fs","pathAndFilename","unlinkSync","ef","message","createFolders","mainfs","folders","directory","k","mkdirSync","prefix","path","copyDirectory","createFolderIfNecessary","readdirSync","forEach","item","file","statSync","isDirectory","createFileIfNecessary","fullPath","parent","extractFirstPartOfPath","extractLastPartOfPath","readFileSync","createDataFile","unlink","lookupPath","follow","cef","params","getEmulatorParams","Module","loadScreen","canvas","ctx","getContext","font","textAlign","fillText","width","height","initialSetup","prog","errorCallback","dirCount","getEntriesAsPromise","exeFiles","allFiles","reader","createReader","doBatch","readEntries","entries","entry","loadExeModal","uppercase","toUpperCase","uploadFile","click","innerHTML","setInterval","readyCheck","populateModalExe","listElement","element","addEventListener","event","execute","clearInterval","isInSubDirectory","programDir","fileEntry","node","isFolder","readdir","filter","idx","subDirectory","lastIndexOf","dropzone","preventDefault","items","dataTransfer","webkitGetAsEntry","logReadFiles","preRun","arguments","postRun","print","value","Array","prototype","slice","call","printErr","setStatus","last","time","Date","now","m","match","totalDependencies","monitorRunDependencies","left","this","isHomeDirectory","str","startWithFiles","webkitRelativePath","filereader","FileReader","file_name","onload","readAsArrayBuffer","extractFilenameExtension","extractFilenameWithoutExtension","toLowerCase","filenameNoExt","createFolder","zipDirPrefix","zip","JSZip","buf","asUint8Array","createFile","done","startIndex","base","dirIndex","indexOf","dirName","pop","calcBackupFilename","toISOString","created","confirm","rename","eef","includes","ee","el","toggleSound","toggleDirectory","itemWidget","inputKey","retVal","replacementParameters","window","location","href","x","kv","hashIndex","select","backgroundColor","fullpath","suffix","extract","URL","revokeObjectURL","outputFilename","blob","getFile","createObjectURL","download","leaf","branch","nextItem","parentDir","childDir","buildTree","readFiles","currentDir","eachFile","fileLocation","encoding","generate","type","compression","Blob"],"mappings":"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","file":"boxedwine-shell.js","sourcesContent":["        let ALLOW_PARAM_OVERRIDE_FROM_URL = true;\n        let SUPPRESS_WINEBOOT = true; //prevent wine from re-creating .wine directory\n        let ROOT = \"/root\";\n        let STORAGE_DROPBOX = \"DROPBOX\";\n        let STORAGE_LOCAL_STORAGE = \"LOCAL_STORAGE\";\n        let STORAGE_MEMORY = \"MEMORY\";\n\n        let ONDEMAND_DEFAULT = \"notset\";\n        let ONDEMAND_ROOT = \"root\";\n\n        let DROPBOX_APP_KEY = 'put key in here';\n        let RECEIVE_URL = \"http://put url in here/oauth_receiver.html\";\n\n        let DEFAULT_AUTO_RUN = true;\n        let DEFAULT_SOUND_ENABLED = true;\n        let DEFAULT_APP_DIRECTORY = ROOT + \"/files/\";\n        let DEFAULT_BPP = 32;\n        let DEFAULT_ROOT_ZIP_FILE = \"boxedwine.zip\";\n        //params\n        let Config = {};\n        Config.locateRootBaseUrl = \"\";\n        Config.locateAppBaseUrl = \"\";\n        Config.locateOverlayBaseUrl = \"\";\n        Config.urlParams = \"\";\n        Config.storageMode = STORAGE_MEMORY;\n        Config.isRunningInline = false;\n        Config.showUploadDownload = false;\n\n        var isRunning = false;\n        var uniqueDirs = {};\n        var timer = null;\n    \tvar index = 0;\n\t\tvar selectedItem;\n\t\tvar selectedFilename;\n\t\tvar files = []; //used for constructing tree and for retrieving files when zipping\n        var client = null;\n        var alreadyBuiltFileSystem = false;\n\n\t\tvar ae = document.createElement(\"a\");\n\t\tdocument.body.appendChild(ae);\n\t\tae.style = \"display: none\";\n\t\tvar url = null;\n      \tvar statusElement = document.getElementById('status');\n      \tvar progressElement = document.getElementById('progress');\n      \tvar spinnerElement = document.getElementById('spinner');\n  //      var dropzone = document.getElementById(\"dropzone\");\n\n\n    //recursive copy based on code in emularity github project\n    var flag_r = { isReadable: function() { return true; },\n        isWriteable: function() { return false; },\n        isTruncating: function() { return false; },\n        isAppendable: function() { return false; },\n        isSynchronous: function() { return false; },\n        isExclusive: function() { return false; },\n        pathExistsAction: function() { return 0; },\n        pathNotExistsAction: function() { return 1; }\n    };\n        function setConfiguration() {\n            Config.appDirPrefix = DEFAULT_APP_DIRECTORY;\n            Config.isAutoRunSet = getAutoRun();\n            Config.rootZipFile = getRootZipFile(\"root\"); //MANUAL:\"base.zip\";\n            Config.extraZipFiles = getZipFileList(\"overlay\"); //MANUAL:\"dlls.zip;fonts.zip\";\n            Config.appZipFile = getAppZipFile(\"app\"); //MANUAL:\"chomp.zip\";\n            Config.appPayload = getPayload(\"app-payload\"); \n            Config.extraPayload = getPayload(\"overlay-payload\"); \n            Config.Program = getExecutable(); //MANUAL:\"CHOMP.EXE\";\n            Config.WorkingDir = getWorkingDirectory(); //MANUAL:\"\";\n            Config.isSoundEnabled = getSound();\n            Config.bpp = getBitsPerPixel();\n            Config.useRangeRequests = getUseRangeRequests();\n            Config.glext = getGLExtensions();\n\t\t\tConfig.cpu = getCPU();\n        }\n        function allowParameterOverride() {\n            if(Config.urlParams.length >0) {\n                return true;\n            }\n            return ALLOW_PARAM_OVERRIDE_FROM_URL;\n        }\n        function getCPU(){\n            var cpu = getParameter(\"cpu\");\n            if(!allowParameterOverride()){\n                cpu = \"\";\n            }else if(cpu == \"p2\") {\n                cpu = \"p2\";\n            }else if(cpu == \"p3\") {\n                cpu = \"p3\";\n            }else{\n                cpu = \"\";\n            }\n            if(cpu.length > 0) {\n            \tconsole.log(\"setting CPU to: \"+cpu);\n            }\n            return cpu;\n        }\n        function getBitsPerPixel(){\n\n            var bpp =  getParameter(\"bpp\");\n            if(!allowParameterOverride()){\n                bpp = DEFAULT_BPP;\n            }else if(bpp == \"8\") {\n                bpp = 8;\n            }else if(bpp == \"16\") {\n                bpp = 16;\n            }else if(bpp == \"32\"){\n                bpp = 32;\n            }else{\n                bpp = DEFAULT_BPP;\n            }\n            console.log(\"setting BPP to: \"+bpp);\n            return bpp;\n        }\n        function getGLExtensions(){ //GL not yet available from JS\n            var glext = getParameter(\"glext\");\n            if(!allowParameterOverride()){\n                glext = \"\";\n            }else{\n            \tif(glext.length > 6) {\n                \tif( (glext.startsWith(\"%22\") && glext.endsWith(\"%22\") )\n                \t\t|| (glext.startsWith('%27') && glext.endsWith('%27'))){\n                    \tglext = glext.substring(3, glext.length - 3);\n\t                \tglext = glext.split('%20').join(' ');\n\t                \tglext = '\"' + glext +  '\"';\n                \t}else{\n\t                \tconsole.log(\"glext paramater must be in quoted string\");\n                \t}\n                }\n            }\n            if(glext.length > 0) {\n            \tconsole.log(\"setting glext to: \"+glext);\n            }\n            return glext;\n        }\n        function getAutoRun(){\n\n            var auto =  getParameter(\"auto\");\n            if(!allowParameterOverride()){\n                auto = DEFAULT_AUTO_RUN;\n            }else if(auto == \"true\") {\n                auto = true;\n            }else if(auto == \"false\"){\n                auto = false;\n            }else{\n                auto = DEFAULT_AUTO_RUN;\n            }\n            if(!auto && Config.isRunningInline){\n                console.log(\"parameter mismatch. Auto run can't be false if running inline. Resetting auto run to true\");\n                auto = true;\n            }\n            console.log(\"setting auto run to: \"+auto);\n            return auto;\n        }\n        function getPayload(param) {\n            var payload =  getParameter(param);\n            if(!allowParameterOverride()){\n                payload = \"\";\n            }\n            return payload;\n        }\n        function getUseRangeRequests(){\n            var ondemand =  getParameter(\"ondemand\");\n            \n            if(!allowParameterOverride()){\n                ondemand = ONDEMAND_DEFAULT;\n            }else if(ondemand == ONDEMAND_ROOT) {\n            }else{\n                ondemand = ONDEMAND_DEFAULT;\n            }\n            console.log(\"setting ondemand to: \"+ondemand);\n            return ondemand;\n        }\n        function getSound(){\n            var soundEnabled =  getParameter(\"sound\");\n            if(!allowParameterOverride()){\n                soundEnabled = DEFAULT_SOUND_ENABLED;\n            }else if(soundEnabled == \"true\") {\n                soundEnabled = true;\n            }else if(soundEnabled == \"false\"){\n                soundEnabled = false;\n            }else{\n                soundEnabled = DEFAULT_SOUND_ENABLED;\n            }\n            console.log(\"setting sound to: \"+soundEnabled);\n            return soundEnabled;\n        }\n        function getWorkingDirectory(){\n\n            var dir =  getParameter(\"work\");\n            if(!allowParameterOverride() || dir===\"\"){\n                dir = \"\";\n            }else{\n                if(dir.startsWith('c:/')){\n                    dir = \"/home/username/.wine/dosdevices/c:/\" + dir.substring(3);\n\t                console.log(\"setting working directory to: \"+dir);\n                }else if(dir.startsWith('d:/')){\n                    dir = \"/home/username/.wine/dosdevices/d:/\" + dir.substring(3);\n    \t            console.log(\"setting working directory to: \"+dir);\n                }else{\n\t                console.log(\"unable to set work directory\");\n                }\n            }\n            return dir;\n        }\n        function getAppZipFile(param){\n\n            var filename =  getParameter(param);\n            if(!allowParameterOverride() || filename===\"\"){\n                filename = \"\";\n                console.log(\"not setting \" + param + \" zip file\");\n            }else{\n                if(!filename.endsWith(\".zip\")){\n                    filename = filename + \".zip\";\n                }\n                console.log(\"setting \" + param + \" zip file to: \"+filename);\n            }\n            return filename;\n        }\n        function getRootZipFile(param){\n\n            var filename =  getParameter(param);\n            if(!allowParameterOverride() || filename===\"\"){\n                filename = DEFAULT_ROOT_ZIP_FILE;\n            }else{\n                if(!filename.endsWith(\".zip\")){\n                    filename = filename + \".zip\";\n                }\n            }\n            console.log(\"setting \" + param + \" zip file to: \"+filename);\n            return filename;\n        }\n        function getZipFileList(param){\n            var zipFiles = [];\n            if(Config.isRunningInline) {\n            \tlet ondemandMinOverlay =  getParameter(\"inline-default-ondemand-root-overlay\");\n                if(ondemandMinOverlay.length > 0) {\n                    if(!ondemandMinOverlay.endsWith(\".zip\")){\n                        ondemandMinOverlay = ondemandMinOverlay + \".zip\";\n                    }\n                    zipFiles.push(ondemandMinOverlay);\n                }\n            }\n            var filenames =  getParameter(param);\n            if(!allowParameterOverride() || filename===\"\"){\n                console.log(\"not setting \" + param + \" zip file(s)\");\n            }else{\n                if(filenames.length > 0) {\n                    var zipFilenames = filenames.split(';');\n                    for(var i=0; i < zipFilenames.length;i++) {\n                        var filename = zipFilenames[i];\n                        if(!filename.endsWith(\".zip\")){\n                            filename = filename + \".zip\";\n                        }\n                        zipFiles.push(filename);\n                    }\n                }\n            }\n            if(zipFiles.length > 0) {\n            \tconsole.log(\"setting \" + param + \" zip file(s) to: \"+zipFiles);\n            }\n            return zipFiles;\n        }\n        function auth_callback(error) {\n            if (error) {\n                alert('Authentication error: ' + error);\n                return;\n            }\n            if (client.isAuthenticated()) {\n                if(alreadyBuiltFileSystem){\n                    return;\n                }\n                alreadyBuiltFileSystem = true;\n                document.getElementById('startbtn').disabled = true;\n                document.getElementById('startbtn').textContent = \"Syncing...\";\n                console.log(\"authenticated!\");\n                buildFileSystem(new BrowserFS.FileSystem.InMemory(), true);\n            } else {\n                alert('unable to authenticate');\n            }\n        }\n        function dropboxLogin()\n        {\n            client = new Dropbox.Client({key: DROPBOX_APP_KEY});\n            client.authDriver(new Dropbox.AuthDriver.Popup({receiverUrl: RECEIVE_URL}));\n            client.authenticate(auth_callback);\n            document.getElementById('startbtn').textContent = \"Start\";\n        }\n        function initFileSystem()\n        {\n            console.log(\"Use Storage mode: \"+Config.storageMode);\n            if(Config.storageMode === STORAGE_LOCAL_STORAGE){\n                var writableStorage;\n                if(BrowserFS.FileSystem.LocalStorage.isAvailable){\n                    writableStorage = new BrowserFS.FileSystem.LocalStorage();\n                }else{\n                    writableStorage = new BrowserFS.FileSystem.InMemory();\n                    console.log(\"Switching to In Memory store as LocalStorage is not available\");\n                }\n                buildFileSystem(writableStorage, false);\n            }else if(Config.storageMode === STORAGE_DROPBOX){\n                client.authenticate({interactive:false}, auth_callback);\n            }else{\n                buildFileSystem(new BrowserFS.FileSystem.InMemory(), false);\n            }\n        }\n        //function from browserfs\n        function syncGet(url, offset, length)\n        {\n          let req = new XMLHttpRequest();\n          req.open('GET', Config.locateRootBaseUrl + url, false);\n          let data = null;\n          let err = null;\n          // Classic hack to download binary data as a string.\n          req.overrideMimeType('text/plain; charset=x-user-defined');\n          let end = offset + length - 1;\n          let range = \"bytes=\" + offset + \"-\" + end;\n          req.setRequestHeader('Range', range);\n          req.onreadystatechange = function(e) {\n            if (req.readyState === 4) {\n              if (req.status === 200 || req.status === 206) {\n                    // Convert the text into a buffer.\n                    const text = req.responseText;\n                    data = new Int8Array(text.length);\n                    // Throw away the upper bits of each character.\n                    for (let i = 0; i < text.length; i++) {\n                      // This will automatically throw away the upper bit of each\n                      // character for us.\n                      data[i] = text.charCodeAt(i);\n                    }\n                    return;\n              } else {\n                err = \"XHR error.\";\n                return;\n              }\n            }\n          };\n          req.send();\n          if (err) {\n            throw err;\n          }\n          return data;\n        }\n        function getFileSize(p  )\n        {\n            return new Promise(function(resolve, reject) {\n                  const req = new XMLHttpRequest();\n                  req.open('HEAD', Config.locateRootBaseUrl + p);\n                  req.onreadystatechange = function(e) {\n                    if (req.readyState === 4) {\n                      if (req.status === 200) {\n                        try {\n                          resolve(parseInt(req.getResponseHeader('Content-Length') || '-1', 10));\n                        } catch (e) {\n                          throw e;\n                        }\n                      } else {\n                        throw new Error(\"Unable to get file size\");\n                      }\n                    }\n                  };\n                  req.onerror = function() {\n                      reject(Error(\"Network Error\"));\n                  };\n                  req.send();\n              }).then(function(result, err) {\n                  if (err != null) {\n                      throw new Error(err);\n                  } else {\n                      return result;\n                  }\n            }, function(err) {\n                  throw new Error(\"Something when wrong when getting file size\");\n            });\n        }\n        function getCentralOffset(buffer)\n        {\n            let ENDSIG = 101010256;\n            let ENDHDR = 22;\n            let ENDTOT = 10;\n            let ENDSIZ = 12;\n            let ENDOFF = 16;\n            let ENDNRD = 4;\n            var pos =0;\n            var offset = buffer.byteLength - ENDHDR;\n            var top = Math.max(0, offset - 65536);\n            var result = 0;\n            do {\n                if (offset < top)\n                    throw new Error(\"not a zip file?\");\n                pos = offset--;\n                result = (((buffer[pos++]) | (buffer[pos++]) << 8) | ((buffer[pos++]) | (buffer[pos++]) << 8) << 16);\n            } while (result != ENDSIG);\n            pos = ( pos + ENDTOT - ENDNRD);\n            var count = ((buffer[pos++]) | (buffer[pos++]) << 8);\n            pos = ( pos + ENDOFF - ENDSIZ);\n            return (((buffer[pos++]) | (buffer[pos++]) << 8) | ((buffer[pos++]) | (buffer[pos++]) << 8) << 16);\n        }\n        function buildFileSystem(writableStorage, isDropBox)\n        {\n            spinnerElement.style.display = '';\n            spinnerElement.hidden = false;\n            var Buffer = BrowserFS.BFSRequire('buffer').Buffer;\n            buildExtraFileSystems(Buffer, function(extraFSs) {\n                buildAppFileSystems(function(homeAdapter) {\n                    if(Config.useRangeRequests == ONDEMAND_ROOT) {\n                        buildRemoteZipFile(Config.rootZipFile, function callback(zipfs) {\n                            buildBrowserFileSystem(writableStorage, isDropBox, homeAdapter, extraFSs, zipfs);\n                        });\n                    } else {\n                        var rootListingObject = {};\n                        rootListingObject[Config.rootZipFile] =  null;\n                        BrowserFS.FileSystem.XmlHttpRequest.Create({\"index\":rootListingObject, \"baseUrl\": Config.locateRootBaseUrl}, function(e2, xmlHttpFs){\n                            if(e2){\n                                console.log(e2);\n                            }\n                            var rootMfs = new BrowserFS.FileSystem.MountableFileSystem();\n                            rootMfs.mount('/temp', xmlHttpFs);\n                            rootMfs.readFile('/temp/' + Config.rootZipFile, null, flag_r, function callback(e, contents){\n                                if(e){\n                                    console.log(e);\n                                }\n                                BrowserFS.FileSystem.ZipFS.Create({\"zipData\":new Buffer(contents)}, function(e3, zipfs){\n                                    if(e3){\n                                        console.log(e3);\n                                    }\n                                    buildBrowserFileSystem(writableStorage, isDropBox, homeAdapter, extraFSs, zipfs);\n                                });\n                                rootMfs = null;\n                            });\n                        });\n                    }\n                });\n            });\n        }\n        function buildRemoteZipFile(zipFilename, zipFileCallback)\n        {\n            var Buffer = BrowserFS.BFSRequire('buffer').Buffer;\n            getFileSize(zipFilename).then(function(fileSizeAsString) {\n                let fileSizeAsInt = Number(fileSizeAsString);\n                let blockSize = fileSizeAsInt > 100000 ? 100000 : fileSizeAsInt - 22;\n                let lastPartOfFile = syncGet(zipFilename, fileSizeAsInt - blockSize, blockSize);\n                let centralOffset = getCentralOffset(new Uint8Array(lastPartOfFile));\n                let remainingLength = fileSizeAsInt - centralOffset;\n                let contents = syncGet(zipFilename, centralOffset, remainingLength);\n                BrowserFS.FileSystem.ZipFS.Create({\"name\": Config.locateRootBaseUrl + zipFilename , \"zipData\":new Buffer(contents)}, function(e3, zipfs){\n                    if(e3){\n                        console.log(e3);\n                    }\n                    zipFileCallback(zipfs);\n                });\n            });\n        }\n        function getBase64Data(base64Data)\n        {\n            let bytes = atob(base64Data);\n        \tlet contentLength = bytes.length;\n    \t\tvar contents = new Uint8Array(contentLength);\n\t\t\tfor (var i = 0; i < contentLength; i++) {\n        \t\tcontents[i] = bytes.charCodeAt(i);\n    \t\t}\n    \t\treturn contents;\n        }\n        function buildAppFileSystems(adapterCallback)\n        {\n            var Buffer = BrowserFS.BFSRequire('buffer').Buffer;\n            if(Config.appPayload.length > 0){\n            \tlet contents = getBase64Data(Config.appPayload);\n                BrowserFS.FileSystem.ZipFS.Create({\"zipData\":new Buffer(contents)}, function(e4, additionalZipfs){\n                    if(e4){\n                        console.log(e4);\n                    }\n                    let homeAdapter = new BrowserFS.FileSystem.FolderAdapter(\"/\", additionalZipfs);\n                    adapterCallback(homeAdapter);\n                });\n            }else if(Config.appZipFile.length > 0){\n                    var listingObject = {};\n                    listingObject[Config.appZipFile] =  null;\n                    var mfs = new BrowserFS.FileSystem.MountableFileSystem();\n                    BrowserFS.FileSystem.XmlHttpRequest.Create({\"index\":listingObject, \"baseUrl\": Config.locateAppBaseUrl}, function(e2, xmlHttpFs){\n                        if(e2){\n                            console.log(e2);\n                        }\n                        mfs.mount('/temp', xmlHttpFs);\n                        mfs.readFile('/temp/' + Config.appZipFile, null, flag_r, function callback(e, contents){\n                            if(e){\n                                console.log(e);\n                            }\n                            BrowserFS.FileSystem.ZipFS.Create({\"zipData\":new Buffer(contents)}, function(e3, additionalZipfs){\n                                if(e3){\n                                    console.log(e3);\n                                }\n                                let homeAdapter = new BrowserFS.FileSystem.FolderAdapter(\"/\", additionalZipfs);\n                                adapterCallback(homeAdapter);\n                                mfs = null;\n                            });\n                        });\n                    });\n            }else{\n                let homeAdapter = new BrowserFS.FileSystem.FolderAdapter(\"/\", new BrowserFS.FileSystem.InMemory());\n                adapterCallback(homeAdapter);\n            }\n        }\n        function buildExtraFileSystems(Buffer, fsCallback)\n        {\n            var extraFSs = [];\n            if(Config.extraPayload.length > 0){\n            \tlet contents = getBase64Data(Config.extraPayload);\n                BrowserFS.FileSystem.ZipFS.Create({\"zipData\":new Buffer(contents)}, function(e2, zipfs){\n                \tif(e2){\n                    \tconsole.log(e2);\n                \t}\n                \textraFSs.push(zipfs);\n                \tfsCallback(extraFSs);\n                });\n            }else if(Config.extraZipFiles.length > 0){\n                for(let i = 0; i < Config.extraZipFiles.length; i++) {\n                    var listingObject = {};\n                    listingObject[Config.extraZipFiles[i]] =  null;\n                    var mfs = new BrowserFS.FileSystem.MountableFileSystem();\n                    BrowserFS.FileSystem.XmlHttpRequest.Create({\"index\":listingObject, \"baseUrl\": Config.locateOverlayBaseUrl}, function(e2, xmlHttpFs){\n                        if(e2){\n                            console.log(e2);\n                        }\n                        mfs.mount('/temp', xmlHttpFs);\n                        mfs.readFile('/temp/' + Config.extraZipFiles[i], null, flag_r, function(e, contents){\n                            if(e){\n                                console.log(e);\n                            }\n                            BrowserFS.FileSystem.ZipFS.Create({\"zipData\":new Buffer(contents)}, function(e3, zipfs){\n                                if(e3){\n                                    console.log(e3);\n                                }\n                                extraFSs.push(zipfs);\n                                if(extraFSs.length == Config.extraZipFiles.length) {\n                                    fsCallback(extraFSs);\n                                }\n                                mfs = null;\n                            });\n                        });\n                    });\n                }\n            }else{\n                fsCallback(extraFSs);\n            }\n        }\n\n        function buildBrowserFileSystem(writableStorage, isDropBox, homeAdapter, extraFSs, zipfs)\n        {\n            FS.createPath(FS.root, 'root', FS.createPath);\n            FS.createPath(\"/root\", 'base', true, true);\n            FS.createPath(\"/root\", 'files', true, true);\n            var mainfs = null;\n\n            BrowserFS.FileSystem.OverlayFS.Create({\"readable\":zipfs,\"writable\":new BrowserFS.FileSystem.InMemory()}, function(e3, rootOverlay){\n                if(e3){\n                    console.log(e3);\n                }\n                if(SUPPRESS_WINEBOOT) {\n                   deleteFile(rootOverlay, \"/lib/wine/wineboot.exe.so\");\n                }\n\n                homeAdapter.initialize(function callback(e){\n                    if(e){\n                        console.log(e);\n                    }\n                    BrowserFS.FileSystem.OverlayFS.Create({\"readable\":homeAdapter,\"writable\":writableStorage}, function(e2, homeOverlay){\n                        if(e2){\n                            console.log(e2);\n                        }\n                        if(isDropBox) {\n                            var mirrorFS = new BrowserFS.FileSystem.AsyncMirror(homeOverlay, new BrowserFS.FileSystem.Dropbox(client));\n                            mirrorFS.initialize(function callback(e4){\n                                if(e4){\n                                    console.log(e4);\n                                }\n                                postBuildFileSystem(rootOverlay, mirrorFS, extraFSs);\n                            });\n                        }else{\n                            postBuildFileSystem(rootOverlay, homeOverlay, extraFSs);\n                        }\n                    });\n                });\n            });\n        }\n        function postBuildFileSystem(rootFS, homeFS, extraFSs)\n        {\n            var mfs = new BrowserFS.FileSystem.MountableFileSystem();\n            mfs.mount('/root/base', rootFS);\n            mfs.mount( Config.appDirPrefix.substring(0, Config.appDirPrefix.length - 1), homeFS);\n            var BFS = new BrowserFS.EmscriptenFS();\n\n            BrowserFS.initialize(mfs);\n            FS.mount(BFS, {root: '/root'}, '/root');\n            \n            for(let i = 0; i < extraFSs.length; i++) {\n                recursiveCopy(extraFSs[i], Config.extraZipFiles[i], '/');\n            }\n            extraFSs = null;\n\n            if(Config.showUploadDownload){\n                document.getElementById('uploadbtn').style.display = \"\";\n                document.getElementById('downloadbtn').style.display = \"\";\n            }\n            spinnerElement.style.display = 'none';\n            if(Config.storageMode === STORAGE_DROPBOX){\n                startEmulator();\n            }else{\n                toggleConsole();\n                if(Config.isAutoRunSet){\n                    start();\n                }else{\n                    var startBtn = document.getElementById('startbtn');\n                    startBtn.disabled = false;\n                    startBtn.style.display = \"\";\n                    var soundToggle = document.getElementById('soundToggle');\n                    if(Config.isSoundEnabled){\n                        soundToggle.checked = true;\n                    }\n                    document.getElementById('sound-checkbox').style.display = \"\";\n                }\n            }\n        }\n        function deleteFile(fs, pathAndFilename)\n        {\n            try {\n                fs.unlinkSync(pathAndFilename);\n            }catch(ef) {\n                console.log(\"Unable to delete:\" + pathAndFilename + \" error:\" + ef.message);\n            }\n        }\n        function createFolders(mainfs, folders)\n        {\n            var directory = \"\";\n            for(var k = 0; k < folders.length; k++){\n                if(folders[k].length > 0) {\n                    directory = directory + \"/\" + folders[k];\n                    mainfs.mkdirSync(directory);\n                }\n            }\n        }\n        function recursiveCopy(fs, zipFilename, filename) {\n\n            var prefix = zipFilename == null ? \"\" : \"/\" + zipFilename.substring(0, zipFilename.length - 4);\n            var path = BrowserFS.BFSRequire('path');\n            copyDirectory(fs, filename, prefix);\n            function copyDirectory(fs, filename, prefix) {\n                createFolderIfNecessary(filename, prefix);\n                fs.readdirSync(filename).forEach(function(item) {\n                    var file = path.resolve(filename, item);\n                    if(!(file.startsWith(\"/__MACOSX\") || file.endsWith(\".DS_Store\"))) {\n                        if (fs.statSync(file).isDirectory()) {\n                            copyDirectory(fs, file, prefix);\n                        } else {\n                            createFileIfNecessary(fs, file, prefix);\n                        }\n                    }\n                });\n            }\n        }\n        function createFileIfNecessary(fs, fullPath, prefix)\n        {\n            var file = fullPath;\n            if(fullPath.startsWith(prefix)) {\n                fullPath = fullPath.substring(prefix.length);\n            }\n            var parent =  extractFirstPartOfPath(fullPath);\n            if(parent.length > 0){\n                var filename = extractLastPartOfPath(fullPath);\n                var contents = fs.readFileSync(file, null, flag_r);\n                try {\n                    console.log(\"creating: root/base\" + parent + \"/\" + filename);\n                    FS.createDataFile(\"root/base\" + parent, filename, contents, true, true);\n                }catch(ef) {\n                    if(ef.message === \"File exists\" || ef.message === \"FS error\"){\n                        try {\n                            FS.unlink(\"root/base\" + parent + \"/\" + filename);\n                            FS.createDataFile(\"root/base\" + parent, filename, contents, true, true);\n                        }catch(ef) {\n                            console.log(\"file replace error:\" + ef.message + \" for: \" + parent + \"/\" + filename);\n                        }\n                    }else {\n                        console.log(\"file creation error:\" + ef.message + \" for: \" + parent + \"/\" + filename);\n                    }\n                }\n            }\n        }\n        //todo use stat!\n        function createFolderIfNecessary(fullPath, prefix)\n        {\n\n            if(fullPath.startsWith(prefix)) {\n                fullPath = fullPath.substring(prefix.length);\n            }\n            var parent = extractFirstPartOfPath(fullPath);\n            var dir = extractLastPartOfPath(fullPath);\n            if(parent.length > 0){\n                try{\n                    FS.lookupPath(\"/root/base\" + parent + \"/\" + dir, { follow: true });\n                }catch(ef){\n                    if(ef.message == \"No such file or directory\"  || ef.message === \"FS error\") {\n                        try{\n                            FS.createPath(\"/root/base/\" + parent, dir, true, true);\n                        }catch(cef) {\n                            console.log(\"Directory creation error:\" + cef.message + \" for: \" + parent + \"/\" + dir);\n                        }\n                    }else if(ef.message != \"File exists\"){\n                        console.log(\"Directory creation error:\" + ef.message+\" for: \" + parent + \"/\" +  dir);\n                    }\n                }\n            }\n        }\n        function start(){\n            if(isRunning){\n                return;\n            }\n            if(Config.isRunningInline) {\n                document.getElementById('inline-runbtn').style.display = 'none';\n                document.getElementById('inline').style.display = \"\";\n            }\n            if(Config.storageMode === STORAGE_DROPBOX){\n                if(client == null || !client.isAuthenticated()){\n                    dropboxLogin();\n                }else{\n                    initFileSystem();\n                }\n            }else{\n                startEmulator();\n            }\n        }\n        function startEmulator()\n        {\n            isRunning = true;\n\n            document.getElementById('startbtn').style.display = 'none';\n            document.getElementById('sound-checkbox').style.display = 'none';\n\n            var params = getEmulatorParams();\n            for(var i=0; i < params.length; i++) {\n                Module['arguments'].push(params[i]);\n            }\n\n            document.getElementById('startbtn').textContent = \"Running...\";\n            Module[\"removeRunDependency\"](\"setupBoxedWine\");\n        }\n        function loadScreen() {\n            if(Config.isAutoRunSet || Config.isRunningInline) {\n                var canvas = document.getElementById(\"canvas\");\n                var ctx = canvas.getContext(\"2d\");\n                ctx.font = \"40px Arial\";\n                ctx.textAlign = \"center\";\n                ctx.fillText(\"Loading...\", canvas.width/2.5, canvas.height/2);\n            }\n        }\n        var initialSetup = function(){\n            console.log(\"running initial setup\");\n            setConfiguration();\n            //loadScreen();\n\n            Module[\"addRunDependency\"](\"setupBoxedWine\");\n            if(Config.storageMode === STORAGE_DROPBOX){\n                startBtn.textContent = \"Login\";\n                startBtn.disabled = false;\n                startBtn.style.display = \"\";\n            }else{\n                initFileSystem();\n            }\n        }\n        function getExecutable()\n        {\n            var prog =  getParameter(\"p\");\n            if(!allowParameterOverride() || prog===\"\"){\n                console.log(\"not setting program to execute\");\n            }else{\n                if(prog.startsWith(\"%22\") && prog.endsWith(\"%22\")){\n                    prog = prog.substring(3, prog.length - 3);\n                }else if(prog.startsWith('%27') && prog.endsWith('%27')){\n                    prog = prog.substring(3, prog.length - 3);\n                }\n                prog = prog.split('%20').join(' ');\n                console.log(\"setting program to execute to: \"+prog);\n            }\n            return prog;\n        }\n        var errorCallback = function(e){\n            console.log(e);\n        }\n        var dirCount = 0;\n        function getEntriesAsPromise(item, exeFiles, allFiles) {\n            return new Promise((resolve, reject) => {\n                if(item.isDirectory){\n                    dirCount = dirCount + 1;\n                    let reader = item.createReader();\n                    let doBatch = () => {\n                        reader.readEntries(entries => {\n                            if (entries.length > 0) {\n                                entries.forEach(function(entry){\n                                    getEntriesAsPromise(entry, exeFiles, allFiles);\n                                });\n                                doBatch();\n                            } else {\n                                dirCount = dirCount - 1;\n                                if(dirCount == 0){\n                                    if(!Config.isAutoRunSet && !isRunning){\n                                        loadExeModal(exeFiles, allFiles);\n                                    }\n                                }\n                                resolve();\n                            }\n                        }, reject);\n                    };\n                    doBatch();\n                }else{\n                    let fullPath = item.fullPath;\n                    let uppercase = fullPath.toUpperCase();\n                    allFiles.push(fullPath);\n                    if(uppercase.endsWith(\".EXE\") || uppercase.endsWith(\".BAT\")){\n                        exeFiles.push(fullPath);\n                    }\n                    item.file(function(item){uploadFile(item, fullPath, allFiles);}, errorCallback);\n                }\n            });\n        }\n        function loadExeModal(exeFiles, allFiles)\n        {\n            document.getElementById('modalLinkExe').click();\n            var message = document.getElementById('message');\n            message.innerHTML = \"<p>Uploading files...</p>\";\n            timer = setInterval(function(){readyCheck(exeFiles, allFiles);}, 100);\n        }\n        function populateModalExe(exeFiles)\n        {\n            var root = document.getElementById('items');\n            root.innerHTML = '';\n            let listElement = document.createElement(\"lu\");\n            for(let i = 0; i < exeFiles.length; i++) {\n                let fullPath = exeFiles[i];\n                let element = document.createElement(\"li\");\n                element.addEventListener(\"click\", function(event){execute(fullPath);}, false);\n                element.innerHTML = fullPath;\n                listElement.appendChild(element);\n            }\n            root.appendChild(listElement);\n        }\n        function execute(filename)\n        {\n            var root = document.getElementById('items');\n            document.getElementById('openModalExeClick').click();\n\n            var file = extractLastPartOfPath(filename);\n            var path = extractFirstPartOfPath(filename);\n\n            Config.WorkingDir = \"/home/username/.wine/dosdevices/d:/\" + path.substring(1);\n            Config.Program = file;\n\n            startEmulator();\n        }\n        function readyCheck(exeFiles, allFiles)\n        {\n            if(allFiles.length==0){\n                clearInterval(timer);\n                var message = document.getElementById('message');\n                message.innerHTML = '';\n                //populateModalExe(exeFiles);\n            }\n        }\n        dropzone.addEventListener(\"dragover\", function(event){\n            event.preventDefault();\n        }, false);\n        dropzone.addEventListener(\"drop\", function(event){\n            event.preventDefault();\n            //if only i know something about async\n            let items = event.dataTransfer.items;\n            let exeFiles = [];\n            let allFiles = [];\n            for(let i =0; i < items.length; i++){\n                getEntriesAsPromise(items[i].webkitGetAsEntry(), exeFiles, allFiles);\n            }\n        }, false);\n        function isInSubDirectory(fullPath, programDir) {\n            var fileEntry = FS.lookupPath(fullPath, { follow: true });\n            if (fileEntry!= null && fileEntry.node.isFolder) {\n                var entries = FS.readdir(fullPath).filter(function(param) {\n                    return param !== \".\" && param !== \"..\" && param !== \"__MACOSX\";\n                });\n                for(var idx = 0; idx < entries.length; idx++) {\n                    if(entries[idx] === programDir) {\n                        return true;\n                    }\n                }\n            }\n            return false;\n        }\n        function getEmulatorParams() {\n            var params = [\"-root\", \"/root/base\"];\n            params.push(\"-mount_drive\");\n            params.push(Config.appDirPrefix);\n            params.push(\"d\");\n            params.push(\"-nozip\");\n            if(!Config.isSoundEnabled){\n                params.push(\"-nosound\");\n            }\n            if(Config.bpp != DEFAULT_BPP){\n                params.push(\"-bpp\");\n                params.push(\"\" + Config.bpp);\n            }\n            if(Config.cpu.length > 0){\n                params.push(\"-\" + Config.cpu);\n            }\n            if(Config.glext.length > 0){\n                params.push(\"-glext\");\n                params.push(Config.glext);\n            }\n            if(Config.WorkingDir.length > 0){\n                params.push(\"-w\");\n                params.push(Config.WorkingDir);\n            }else if(Config.appPayload.length > 0 && Config.Program.length > 0 && Config.Program.substring(0 ,1) != \"/\"){\n                params.push(\"-w\");\n                params.push(\"/home/username/.wine/dosdevices/d:\");\n            }else if(Config.appZipFile.length > 0 && Config.Program.length > 0 && Config.Program.substring(0 ,1) != \"/\"){\n                var subDirectory = Config.appZipFile.substring(0, Config.appZipFile.lastIndexOf(\".\"));\n                params.push(\"-w\");\n                if(isInSubDirectory(Config.appDirPrefix, subDirectory)){\n                    params.push(\"/home/username/.wine/dosdevices/d:/\" + subDirectory);\n                }else{\n                    params.push(\"/home/username/.wine/dosdevices/d:\");\n                }\n            }\n        \tparams.push(\"/bin/wine\");\n            if(Config.Program.length > 0){\n                if (Config.Program.endsWith('.bat')) {\n                    params.push(\"cmd\");\n                    params.push(\"/c\");\n                }\n                params.push(Config.Program);\n            }else{\n\t            params.push(\"explorer\");\n    \t        params.push(\"/desktop=shell\");\n            }\n            console.log(\"Emulator params:\" + params);\n            return params;\n        }\n      var Module = {\n        logReadFiles : false, //enable if you want to prune with tools/common utility\n        preRun: [initialSetup],\n        arguments: [],\n        postRun: [],\n        print: (function() {\n          var element = document.getElementById('output');\n          if (element) element.value = ''; // clear browser cache\n          return function(text) {\n            text = Array.prototype.slice.call(arguments).join(' ');\n            // These replacements are necessary if you render to raw HTML\n            //text = text.replace(/&/g, \"&amp;\");\n            //text = text.replace(/</g, \"&lt;\");\n            //text = text.replace(/>/g, \"&gt;\");\n            //text = text.replace('\\n', '<br>', 'g');\n            console.log(text);\n            //remove in browser console\n            /*if (element) { \n              element.value += text + \"\\n\";\n              element.scrollTop = element.scrollHeight; // focus on bottom\n            }\n            */\n          };\n        })(),\n        printErr: function(text) {\n          text = Array.prototype.slice.call(arguments).join(' ');\n          if (0) { // XXX disabled for safety typeof dump == 'function') {\n            dump(text + '\\n'); // fast, straight to the real console\n          } else {\n            console.error(text);\n          }\n        },\n        canvas: (function() {\n          var canvas = document.getElementById('canvas');\n\n          // As a default initial behavior, pop up an alert when webgl context is lost. To make your\n          // application robust, you may want to override this behavior before shipping!\n          // See http://www.khronos.org/registry/webgl/specs/latest/1.0/#5.15.2\n          canvas.addEventListener(\"webglcontextlost\", function(e) { alert('WebGL context lost. You will need to reload the page.'); e.preventDefault(); }, false);\n          canvas.width  = 800;\n          canvas.height = 600;\n          return canvas;\n        })(),\n        setStatus: function(text) {\n          if (!Module.setStatus.last) Module.setStatus.last = { time: Date.now(), text: '' };\n          if (text === Module.setStatus.text) return;\n          var m = text.match(/([^(]+)\\((\\d+(\\.\\d+)?)\\/(\\d+)\\)/);\n          var now = Date.now();\n          if (m && now - Date.now() < 30) return; // if this is a progress update, skip it if too soon\n          if (m) {\n            text = m[1];\n            progressElement.value = parseInt(m[2])*100;\n            progressElement.max = parseInt(m[4])*100;\n            progressElement.hidden = false;\n            spinnerElement.hidden = false;\n          } else {\n            progressElement.value = null;\n            progressElement.max = null;\n            progressElement.hidden = true;\n            if (!text) spinnerElement.hidden = true;\n          }\n          statusElement.innerHTML = text;\n        },\n        totalDependencies: 0,\n        monitorRunDependencies: function(left) {\n          this.totalDependencies = Math.max(this.totalDependencies, left);\n          Module.setStatus(left ? 'Preparing... (' + (this.totalDependencies-left) + '/' + this.totalDependencies + ')' : '');\n        }\n      };\n      Module.setStatus('Downloading...');\n      window.onerror = function() {\n        Module.setStatus('Exception thrown, see JavaScript console');\n        spinnerElement.style.display = 'none';\n        Module.setStatus = function(text) {\n          if (text) Module.printErr('[post-exception status] ' + text);\n        };\n      };\n\n        function isHomeDirectory(str){\n            if(str.length >= 10){\n                if(str.substring(0,10) === '/root/home'){\n                    return true;\n                }\n            }\n            return false;\n        }\n        function startWithFiles(files){\n            for (let i = 0; i < files.length; i++) {\n                uploadFile(files[i]);\n            }\n        }\n        function uploadFile(file, fullPath, allFiles)\n        {\n            let filename = null;\n            if(fullPath){\n                filename = fullPath.startsWith(\"/\") ? fullPath.substring(1) : fullPath;\n            }else{\n                filename = file.webkitRelativePath.length == 0 ? file.name : file.webkitRelativePath;\n            }\n            var filereader = new FileReader();\n            filereader.file_name = file.name;\n            filereader.onload = function(){readFile(this.result, filename, allFiles)};\n            filereader.readAsArrayBuffer(file);\n        }\n        function extractLastPartOfPath(str){\n                return str.substring(str.lastIndexOf(\"/\")+1,str.length);\n        }\n        function extractFirstPartOfPath(str){\n                return str.substring(0,str.lastIndexOf(\"/\"));\n        }\n        function extractFilenameExtension(str){\n                return str.substring(str.lastIndexOf(\".\")+1,str.length);\n        }\n        function extractFilenameWithoutExtension(str){\n                return str.substring(0, str.lastIndexOf(\".\"));\n        }\n        function readFile(data, name, allFiles){\n            var fileExt = extractFilenameExtension(name);\n            if(fileExt.toLowerCase() === 'zip'){\n                var filenameNoExt = extractFilenameWithoutExtension(name);\n                if(!createFolder(Config.appDirPrefix, filenameNoExt)){//If dir exists and user says no to replace existing dir, then stop here\n                    return;\n                }\n                var zipDirPrefix = Config.appDirPrefix + filenameNoExt;\n                var zip = new JSZip(data);\n                for(var entry in zip.files)\n                {\n                    var data = zip.file(entry);\n                    if(data != null){\n                        var buf = data.asUint8Array();\n                        var parent = zipDirPrefix + \"/\" + extractFirstPartOfPath(entry) ;\n                        var filename = extractLastPartOfPath(entry);\n                        createFile(parent, filename, buf);\n                    }else{ //directory\n                        var fullPath = entry.substring(0,entry.length-1);\n                        var parent = extractFirstPartOfPath(fullPath);\n                        var dir = extractLastPartOfPath(fullPath);\n                        if(parent.length == 0){\n                            parent = zipDirPrefix;\n                        }else{\n                            parent = zipDirPrefix + \"/\" + parent;\n                        }\n                        createFolder(parent, dir);\n                    }\n                }\n            }else{\n                var done = false;\n                var startIndex = 0;\n                var base = Config.appDirPrefix;\n                var filename = extractLastPartOfPath(name);\n                while(!done){\n                    var dirIndex = name.indexOf(\"/\", startIndex);\n                    if(dirIndex == -1){\n                        done =true;\n                    }else{\n                        var dirName = name.substring(startIndex, dirIndex);\n                        var key = base + dirName;\n                        if(dirName.length > 0) {\n                            if(uniqueDirs[key] == null && dirName.length > 0){\n                                createFolder(base, dirName);\n                                uniqueDirs[key] = \"\";\n                            }\n                            base = base + dirName + \"/\";\n                        }\n                        startIndex = dirIndex + 1;\n                    }\n                }\n                createFile(base.substring(0,base.length-1), filename, new Uint8Array(data));\n                if(allFiles){\n                    allFiles.pop(name);\n                }\n            }\n        }\nfunction calcBackupFilename()\n{\n    var d = new Date();\n    var str =d.toISOString();\n    str = \".backup.\" + str.split(\":\").join(\".\");\n    return str;\n}\nfunction createFolder(parent, dir)\n{\n    var created = true;\n    try{\n        FS.createPath(parent, dir, true, true);\n        //console.log(entry + \" is a dir parent=\"+parent+\" dir=\"+dir);\n        //console.log(\"Directory created :\" + parent + \"/\" +  dir);\n    }catch(ef){\n      if(ef.message === \"File exists\" || ef.message === \"FS error\"){\n        console.log(\"Directory already exists! :\" + parent + dir);\n        var replace = confirm(\"Directory already exists: \" + parent + dir+\" continue?\");\n        if(replace){\n            try{\n                //yeah, like that would work! FS.rmdir(parent + dir);\n                FS.rename(parent + dir,parent + dir + calcBackupFilename());\n                FS.createPath(parent, dir, true, true);\n                console.log(\"Directory replaced: \" + parent + dir);\n            }catch(eef){\n                console.log(\"eef=\"+eef);\n                created = false;\n                alert(\"unable to create folder: \"+ parent + dir);\n            }\n        }else{\n            created = false;\n        }\n      }else{\n        console.log(\"ef=\"+ef);\n      }\n    }\n    return created;\n}\nfunction createFile(dir, name, buf)\n{\n\tif(dir.includes(\"__MACOSX\")) {\n\t\treturn\n\t}\n    try{\n        FS.createDataFile(dir, name, buf, true, true);\n        //console.log(\"File created :\" + dir + \"/\" + name);\n    }catch(e){\n      if(e.message === \"File exists\" || e.message === \"FS error\"){\n        console.log(\"File already exists!: \" + dir + name);\n        var replace = confirm(\"File already exists: \" + dir + \"/\" + name+\" replace?\");\n        if(replace){\n            try{\n                FS.unlink(dir + \"/\" + name);\n                FS.createDataFile(dir, name, buf, true, true);\n                console.log(\"File replaced: \" + dir + name);\n            }catch(ee){\n                console.log(\"ee=\"+ee);\n                alert(\"unable to create file: \"+ dir + name);\n            }\n        }\n      }else{\n        console.log(\"e=\"+e);\n      }\n    }\n}\nfunction toggleConsole() {\n    var el = document.getElementById('showConsole');\n    var console = document.getElementById('output');\n    if(el.checked){\n        console.style.display = '';\n    }else{\n        console.style.display = 'none';\n    }\n}\nfunction toggleSound() {\n    var el = document.getElementById('soundToggle');\n    Config.isSoundEnabled = el.checked;\n}\nfunction toggleDirectory(item){\n\tvar itemWidget =document.getElementById(item);\n\tif(itemWidget!=null){\n\t\tif(itemWidget.style.display=='none'){//show\n\t\t\titemWidget.style.display=\"\";\n\t\t\tdocument.getElementById(item+'-expand').style.display=\"none\";\n\t\t\tdocument.getElementById(item+'-contract').style.display=\"\";\n\t\t}else{//hide\n\t\t\titemWidget.style.display=\"none\";\n\t\t\tdocument.getElementById(item+'-expand').style.display=\"\";\n\t\t\tdocument.getElementById(item+'-contract').style.display=\"none\";\n\t\t}\n\t}\n}\nfunction getParameter(inputKey){\n    var retVal=\"\";\n    var replacementParameters = Config.urlParams;\n    var url = replacementParameters.length > 0 ? \"?\" + replacementParameters : window.location.href;\n    var index = url.indexOf(\"?\")+1;\n    if(index > 0){\n        var paramStr = url.substring(index);\n        var params = paramStr.split(\"&\");\n        for(var x=0;x<params.length;x++){\n            var param = params[x];\n            var kv = param.split(\"=\");\n            var key = kv[0];\n            if(key === inputKey){\n                retVal = kv[1];\n                break;\n            }\n        }\n    }\n    var hashIndex = retVal.lastIndexOf('#');\n    if(hashIndex > 0 ) {\n        retVal = retVal.substring(0, hashIndex);\n    }\n    return retVal;\n}\nfunction select(index, dir, filename){\n\tif(selectedItem != null){\n\t\tselectedItem.style.backgroundColor = \"\";\n\t}\n\tselectedItem = document.getElementById(index + '-data');\n\tselectedItem.style.backgroundColor=\"#94c2c5\";\n\tvar fullpath = dir;\n\tif(filename != null){\n\t\tfullpath = fullpath + filename;\n\t}\n\tdocument.getElementById('selectedItem').value = fullpath\n\tselectedFilename = filename\n}\nfunction endsWith(str, suffix){\n    return str.indexOf(suffix, str.length - suffix.length) !== -1;\n}\nfunction extract(){\n\tif(url != null){\n\t\twindow.URL.revokeObjectURL(url);\n\t}\n\tvar file = document.getElementById('selectedItem').value;\n\tif(file != null && file.length > 0 && files.length > 1) {\n        if(endsWith(file,\"/\")){\n            file = file.substring(0,file.length - 1);\n        }\n\t\tvar isDirectory = false;\n\t\tvar outputFilename;\n\t\tif(selectedFilename !=null){\n\t\t\toutputFilename = selectedFilename;\n\t\t}else{\n\t\t\tisDirectory = true;\n\t\t\toutputFilename = file.substring(file.lastIndexOf('/') + 1) + \".zip\";\n\t\t}\n\n\t\tvar blob = getFile(file, isDirectory);\n\t\turl = window.URL.createObjectURL(blob);\n\t\tae.href = url;\n\t\tae.download = outputFilename;\n\t\tae.click();\n\t}\n}\nfunction done(){\n\tif(url != null){\n\t\twindow.URL.revokeObjectURL(url);\n\t}\n}\nfunction leaf(entry){\n    index++;\n\tvar text = \"<tr><td ><span id=\\\"\" + index + \"-data\\\" onclick=\\\"select(\" + index + \",'\" + entry.dir + \"','\" + entry.filename + \"')\\\">\" + entry.filename + \"</span></td></tr>\";\n\treturn text;\n}\nfunction branch(entries){\n\tvar item = entries[index];\n    index++;\n\tvar dir = item.dir;\n    var dirName = dir.substring(0, dir.length - 1);\n    dirName = dirName.substring(dirName.lastIndexOf(\"/\")+1,dirName.length);\n\tvar text = \"<tr>\";\n    text = text + \"<td>\";\n\ttext = text + \"<span id=\\\"\" + index + \"-expand\\\"><a onclick=\\\"toggleDirectory('\" + index + \"')\\\"><strong>+</strong></a></span>\";\n    text = text + \"<span id=\\\"\" + index + \"-contract\\\" style=\\\"display:none;\\\"><a onclick=\\\"toggleDirectory('\" + index + \"')\\\"><strong>-</strong></a></span>\";\n    text = text + \"<span id=\\\"\" + index + \"-data\\\" onclick=\\\"select(\" + index + \",'\" + dir + \"', null)\\\">[\" + dirName + \"]</span>\";\n    text = text + \"<div id='\" + index + \"' style=\\\"display:none;\\\">\";\n    text = text + \"<table>\";\n    while(index < entries.length){\n    \tvar nextItem = entries[index];\n    \tif(nextItem.dir === item.dir){\n    \t\ttext = text + leaf(nextItem);\n    \t}else if(parentDir(nextItem.dir) === item.dir){\n    \t\ttext = text + branch(entries, index);\n    \t}else{\n    \t\tbreak;\n    \t}\n    }\n    text = text + \"</table>\";\n    text = text + \"</div>\";\n\ttext = text + \"</td>\";\n\ttext = text + \"</tr>\";\n\treturn text;\n}\nfunction parentDir(childDir)\n{\n    if(endsWith(childDir,\"/\")){\n        childDir = childDir.substring(0,childDir.length - 1);\n    }\n    var parentDir= childDir.substring(0, childDir.lastIndexOf('/') + 1);\n    return parentDir;\n}\nfunction buildTree()\n{\n    document.getElementById('modalLink').click();\n    var root = document.getElementById('tree');\n    //reset\n    document.getElementById('selectedItem').value = \"\";\n    selectedFilename = null;\n\tfiles = [];\n    root.innerHTML = \"\";\n    index = 0;\n\n    var currentDir = Config.appDirPrefix;\n\treadFiles(currentDir, files);\n\n\t//now build tree\n\tvar contents = \"<table>\";\n\tcontents = contents + branch(files);\n\tcontents = contents + \"</table>\";\n\tdocument.getElementById('loadStatus').style.display=\"none\";\n\n\troot.innerHTML = contents;\n\ttoggleDirectory('1');\n}\n\nfunction readFiles(currentDir, files)\n{\n    console.log(\"adding directory: \" + currentDir);\n    files.push({dir : currentDir, filename : \"\"});\n    var entries = FS.readdir(currentDir).filter(function(param) {\n        return param !== \".\" && param !== \"..\";\n    });\n    entries.forEach(function(entry) {\n        var fileEntry = FS.lookupPath(currentDir + entry, { follow: true });\n        if (fileEntry.node.isFolder) {\n            readFiles(currentDir + entry + \"/\", files);\n        }else{\n            console.log(\"adding file: \" + currentDir + entry);\n            files.push({dir : currentDir, filename : entry});\n        }\n    });\n}\n\nfunction startsWith(str, prefix)\n{\n    return str.slice(0, prefix.length) == prefix;\n}\nfunction getFile(file, isDirectory)\n{\n\tif(isDirectory){//zip up directory\n\t\tvar zip = new JSZip();\n\t\tfiles.forEach(function(eachFile) {\n            if(startsWith(eachFile.dir, file)){\n                if(eachFile.filename !== \"\"){\n                      var fileLocation = eachFile.dir + eachFile.filename;\n                      var data = FS.readFile(fileLocation, { encoding: 'binary' });\n                      zip.file(fileLocation.substring(file.length), data);\n                }else{\n                        zip.file(eachFile.dir.substring(file.length), null, {dir: true});\n                }\n            }\n\t\t});\n\t\treturn zip.generate({type:\"blob\", compression:\"DEFLATE\"});\n\t}else{\n\t\tvar data = FS.readFile(file, { encoding: 'binary' });\n\t\treturn new Blob([data], {type: \"octet/stream\"});\n\t}\n}\n"]}